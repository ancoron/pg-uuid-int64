SET timezone TO 'Zulu';
\x
-- I/O
SELECT 'edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3'::uuid_int64 AS ext;
-[ RECORD 1 ]-----------------------------
ext | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3

SELECT 'EDB4D8F0-1A80-11E8-98D9-E03F49F7F8F3'::uuid_int64 AS ext_upper;
-[ RECORD 1 ]-----------------------------------
ext_upper | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3

SELECT '{edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3}'::uuid_int64 AS ext_braces;
-[ RECORD 1 ]------------------------------------
ext_braces | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3

SELECT 'edb4d8f01a8011e898d9e03f49f7f8f3'::uuid_int64 AS ext_nosep;
-[ RECORD 1 ]-----------------------------------
ext_nosep | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3

SELECT '{edb4d8f01a8011e898d9e03f49f7f8f3}'::uuid_int64 AS ext_nosep_braces;
-[ RECORD 1 ]----+-------------------------------------
ext_nosep_braces | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3

-- ...don't accept garbage...
SELECT 'edb4d8f0-1a80-11e8-98d9-e03_49f7f8f3'::uuid_int64 AS fail;
ERROR:  invalid input syntax for type uuid_int64: "edb4d8f0-1a80-11e8-98d9-e03_49f7f8f3"
LINE 1: SELECT 'edb4d8f0-1a80-11e8-98d9-e03_49f7f8f3'::uuid_int64 AS...
               ^
-- ...also accept different versions...
SELECT '87c771ce-bc95-3114-ae59-c0e26acf8e81'::uuid_int64 AS ver_3;
-[ RECORD 1 ]-------------------------------
ver_3 | 87c771ce-bc95-3114-ae59-c0e26acf8e81

SELECT '22859369-3a4f-49ef-8264-1aaf0a953299'::uuid_int64 AS ver_4;
-[ RECORD 1 ]-------------------------------
ver_4 | 22859369-3a4f-49ef-8264-1aaf0a953299

SELECT 'c9aec822-6992-5c93-b34a-33cc0e952b5e'::uuid_int64 AS ver_5;
-[ RECORD 1 ]-------------------------------
ver_5 | c9aec822-6992-5c93-b34a-33cc0e952b5e

SELECT '00000000-0000-0000-0000-000000000000'::uuid_int64 AS nil;
-[ RECORD 1 ]-----------------------------
nil | 00000000-0000-0000-0000-000000000000

-- ...also accept different variants...
SELECT 'edb4d8f0-1a80-11e8-78d9-e03f49f7f8f3'::uuid_int64 AS var_ncs;
-[ RECORD 1 ]---------------------------------
var_ncs | edb4d8f0-1a80-11e8-78d9-e03f49f7f8f3

SELECT 'edb4d8f0-1a80-11e8-d8d9-e03f49f7f8f3'::uuid_int64 AS var_ms;
-[ RECORD 1 ]--------------------------------
var_ms | edb4d8f0-1a80-11e8-d8d9-e03f49f7f8f3

SELECT 'edb4d8f0-1a80-11e8-f8d9-e03f49f7f8f3'::uuid_int64 AS var_future;
-[ RECORD 1 ]------------------------------------
var_future | edb4d8f0-1a80-11e8-f8d9-e03f49f7f8f3

-- conversion
SELECT from_std, pg_typeof(from_std) AS from_std
FROM uuid_int64_convert('edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3'::uuid) AS from_std;
-[ RECORD 1 ]----------------------------------
from_std | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3
from_std | uuid_int64

SELECT to_std, pg_typeof(to_std)
FROM uuid_int64_convert('edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3'::uuid_int64) AS to_std;
-[ RECORD 1 ]-----------------------------------
to_std    | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3
pg_typeof | uuid

-- cast
SELECT 'edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3'::uuid_int64::uuid AS cast_to_uuid;
-[ RECORD 1 ]+-------------------------------------
cast_to_uuid | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3

SELECT 'edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3'::uuid::uuid_int64 AS cast_from_uuid;
-[ RECORD 1 ]--+-------------------------------------
cast_from_uuid | edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3

-- basic comparison method
SELECT
    uuid_int64_cmp('8385ded2-8dbb-11e9-ae2b-db6f0f573554', '8385ded2-8dbb-11e9-ae2b-db6f0f573554') AS eq,
    uuid_int64_cmp('8385ded2-8dbb-11e9-ae2b-db6f0f573554', '8385ded3-8dbb-11e9-ae2b-db6f0f573554') AS lt,
    uuid_int64_cmp('8385ded3-8dbb-11e9-ae2b-db6f0f573554', '8385ded2-8dbb-11e9-ae2b-db6f0f573554') AS gt,
    uuid_int64_cmp('8385ded2-8dbb-11e9-ae2b-db6f0f573554', '8385ded2-8dbb-11e9-ae2c-db6f0f573554') AS lt_clock,
    uuid_int64_cmp('8385ded2-8dbb-11e9-ae2c-db6f0f573554', '8385ded2-8dbb-11e9-ae2b-db6f0f573554') AS gt_clock,
    uuid_int64_cmp('8385ded2-8dbb-11e9-ae2b-db6f0f573554', '8385ded2-8dbb-11e9-ae2b-db6f0f573555') AS lt_node,
    uuid_int64_cmp('8385ded2-8dbb-11e9-ae2b-db6f0f573555', '8385ded2-8dbb-11e9-ae2b-db6f0f573554') AS gt_node
;
-[ RECORD 1 ]
eq       | 0
lt       | -1
gt       | 1
lt_clock | -1
gt_clock | 1
lt_node  | -1
gt_node  | 1

-- timestamp extraction...
SELECT extract(epoch from ts), to_char(ts, 'YYYY-MM-DD HH24:MI:SS.US')
FROM uuid_int64_timestamp('edb4d8f0-1a80-11e8-98d9-e03f49f7f8f3') AS ts;
-[ RECORD 1 ]-------------------------
date_part | 1519600168.09884
to_char   | 2018-02-25 23:09:28.098840

SELECT extract(epoch from ts), to_char(ts, 'YYYY-MM-DD HH24:MI:SS.US')
FROM uuid_int64_timestamp('4938f30e-8449-11e9-ae2b-e03f49467033') AS ts;
-[ RECORD 1 ]-------------------------
date_part | 1559378590.74588
to_char   | 2019-06-01 08:43:10.745883

SELECT
    coalesce(to_char(uuid_int64_timestamp('87c771ce-bc95-3114-ae59-c0e26acf8e81'), 'YYYY-MM-DD HH24:MI:SS.US'), '<null>') AS ver_3,
    coalesce(to_char(uuid_int64_timestamp('22859369-3a4f-49ef-8264-1aaf0a953299'), 'YYYY-MM-DD HH24:MI:SS.US'), '<null>') AS ver_4,
    coalesce(to_char(uuid_int64_timestamp('c9aec822-6992-5c93-b34a-33cc0e952b5e'), 'YYYY-MM-DD HH24:MI:SS.US'), '<null>') AS ver_5,
    coalesce(to_char(uuid_int64_timestamp('00000000-0000-0000-0000-000000000000'), 'YYYY-MM-DD HH24:MI:SS.US'), '<null>') AS nil
;
-[ RECORD 1 ]-
ver_3 | <null>
ver_4 | <null>
ver_5 | <null>
nil   | <null>

-- simple data tests
CREATE TABLE uuid_int64_test (id uuid_int64 PRIMARY KEY);
INSERT INTO uuid_int64_test (id) VALUES
('1004cd50-4241-11e9-b3ab-db6f0f573554'), -- 2019-03-09 07:58:02.056840
('05602550-8a8c-11e9-b3ab-db6f0f573554'), -- 2019-06-09 07:56:00.175240
('8385ded2-8dbb-11e9-ae2b-db6f0f573554'), -- 2019-06-13 09:13:31.650017
('00000000-0000-0000-0000-000000000000'), -- nil
('ffc449f0-8c2f-11e9-aba7-e03f497ffcbf'), -- 2019-06-11 10:02:19.391640
('ffc449f0-8c2f-11e9-96b4-e03f49d7f7bb'), -- 2019-06-11 10:02:19.391640
('ffc449f0-8c2f-11e9-9bb8-e03f4977f7b7'), -- 2019-06-11 10:02:19.391640
('ffc449f0-8c2f-11e9-8f34-e03f49c7763b'), -- 2019-06-11 10:02:19.391640
('c9aec822-6992-5c93-b34a-33cc0e952b5e'), -- version 5
('ffced5f0-8c2f-11e9-aba7-e03f497ffcbf'), -- 2019-06-11 10:02:19.460760
('22859369-3a4f-49ef-8264-1aaf0a953299'), -- version 4
('ffd961f0-8c2f-11e9-96b4-e03f49d7f7bb'), -- 2019-06-11 10:02:19.529880
('ffe3edf0-8c2f-11e9-9bb8-e03f4977f7b7'), -- 2019-06-11 10:02:19.599000
('ffee79f0-8c2f-11e9-aba7-e03f497ffcbf'), -- 2019-06-11 10:02:19.668120
('fff905f0-8c2f-11e9-96b4-e03f49d7f7bb'), -- 2019-06-11 10:02:19.737240
('87c771ce-bc95-3114-ae59-c0e26acf8e81'), -- version 3
('000391f0-8c30-11e9-aba7-e03f497ffcbf'), -- 2019-06-11 10:02:19.806360
('000e1df0-8c30-11e9-9bb8-e03f4977f7b7'), -- 2019-06-11 10:02:19.875480
('0018a9f0-8c30-11e9-96b4-e03f49d7f7bb'), -- 2019-06-11 10:02:19.944600
('002335f0-8c30-11e9-9bb8-e03f4977f7b7'), -- 2019-06-11 10:02:20.013720
('002dc1f0-8c30-11e9-aba7-e03f497ffcbf'), -- 2019-06-11 10:02:20.082840
('00384df0-8c30-11e9-96b4-e03f49d7f7bb'), -- 2019-06-11 10:02:20.151960
('0042d9f0-8c30-11e9-aba7-e03f497ffcbf'), -- 2019-06-11 10:02:20.221080
('004d65f0-8c30-11e9-9bb8-e03f4977f7b7')  -- 2019-06-11 10:02:20.290200
;
ANALYZE uuid_int64_test;
SELECT
    count(*) FILTER (WHERE id < '002335f0-8c30-11e9-9bb8-e03f4977f7b7') AS count_lt,
    count(*) FILTER (WHERE id <= '002335f0-8c30-11e9-9bb8-e03f4977f7b7') AS count_le,
    count(*) FILTER (WHERE id > '002335f0-8c30-11e9-9bb8-e03f4977f7b7') AS count_gt,
    count(*) FILTER (WHERE id >= '002335f0-8c30-11e9-9bb8-e03f4977f7b7') AS count_ge
FROM uuid_int64_test;
-[ RECORD 1 ]
count_lt | 15
count_le | 16
count_gt | 8
count_ge | 9

-- verify use of sort-support
SET enable_seqscan TO off;
\x
SET timezone TO 'Asia/Tokyo';
SELECT id FROM uuid_int64_test WHERE id <= '002335f0-8c30-11e9-9bb8-e03f4977f7b7';
                  id                  
--------------------------------------
 00000000-0000-0000-0000-000000000000
 1004cd50-4241-11e9-b3ab-db6f0f573554
 05602550-8a8c-11e9-b3ab-db6f0f573554
 ffc449f0-8c2f-11e9-8f34-e03f49c7763b
 ffc449f0-8c2f-11e9-96b4-e03f49d7f7bb
 ffc449f0-8c2f-11e9-9bb8-e03f4977f7b7
 ffc449f0-8c2f-11e9-aba7-e03f497ffcbf
 ffced5f0-8c2f-11e9-aba7-e03f497ffcbf
 ffd961f0-8c2f-11e9-96b4-e03f49d7f7bb
 ffe3edf0-8c2f-11e9-9bb8-e03f4977f7b7
 ffee79f0-8c2f-11e9-aba7-e03f497ffcbf
 fff905f0-8c2f-11e9-96b4-e03f49d7f7bb
 000391f0-8c30-11e9-aba7-e03f497ffcbf
 000e1df0-8c30-11e9-9bb8-e03f4977f7b7
 0018a9f0-8c30-11e9-96b4-e03f49d7f7bb
 002335f0-8c30-11e9-9bb8-e03f4977f7b7
(16 rows)

EXPLAIN (ANALYZE, TIMING OFF, SUMMARY OFF, COSTS OFF)
SELECT * FROM uuid_int64_test WHERE id = '000e1df0-8c30-11e9-9bb8-e03f4977f7b7';
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Index Only Scan using uuid_int64_test_pkey on uuid_int64_test (actual rows=1 loops=1)
   Index Cond: (id = '000e1df0-8c30-11e9-9bb8-e03f4977f7b7'::uuid_int64)
   Heap Fetches: 1
(3 rows)

EXPLAIN (ANALYZE, TIMING OFF, SUMMARY OFF, COSTS OFF)
SELECT id FROM uuid_int64_test WHERE id > 'ffc449f0-8c2f-11e9-96b4-e03f49d7f7bb' ORDER BY id DESC LIMIT 3 OFFSET 1;
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Limit (actual rows=3 loops=1)
   ->  Index Only Scan Backward using uuid_int64_test_pkey on uuid_int64_test (actual rows=4 loops=1)
         Index Cond: (id > 'ffc449f0-8c2f-11e9-96b4-e03f49d7f7bb'::uuid_int64)
         Heap Fetches: 4
(4 rows)

